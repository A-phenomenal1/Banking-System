{"ast":null,"code":"var _jsxFileName = \"/home/immortal/Documents/React-files/Banking/frontend/src/App/components/SendMoneyModal.js\",\n    _s = $RefreshSig$();\n\nimport Axios from \"axios\";\nimport React, { useState } from \"react\";\nimport { Modal, Button } from \"react-bootstrap\";\nimport colors from \"../../config/colors\";\nimport DoneComponent from \"./DoneComponent\";\nimport done from \"../../assets/success.png\";\nimport failed from \"../../assets/failed.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction SendMoneyModal(props) {\n  _s();\n\n  const [detail, setDetail] = useState({\n    accountNo: 0,\n    name: \"\",\n    email: \"\",\n    balance: 0,\n    amount: 0,\n    message: \"\"\n  }); // const [transacDetails, setTransacDetails] = useState({\n  //   sender: {},\n  //   receiver: {},\n  // });\n\n  const [sender, setSender] = useState({});\n  const [receiver, setReceiver] = useState({});\n  const [btnTitle, setBtnTitle] = useState(\"Search User\");\n  const [error, setError] = useState({\n    isError: false,\n    error: \"\"\n  });\n  const [isModal, setIsModal] = useState(false);\n  const [status, setStatus] = useState({\n    isSuccess: false,\n    img: \"\"\n  });\n\n  const searchUser = () => {\n    Axios.get(\"http://localhost:5000/search/\" + detail.accountNo).then(response => {\n      if (response.data.accountNo !== props.accountno) {\n        setDetail(prevState => {\n          return { ...prevState,\n            name: response.data.name,\n            email: response.data.email,\n            balance: response.data.balance\n          };\n        });\n        setError(prevState => {\n          return { ...prevState,\n            isError: false\n          };\n        });\n        setBtnTitle(\"Send Money\");\n      } else {\n        setError({\n          isError: true,\n          error: \"You can't send money to yourself...\"\n        });\n      }\n    }).catch(e => setError({\n      isError: true,\n      error: \"Invalid Account No...\"\n    }));\n  };\n\n  const addTransaction = async () => {\n    try {\n      //sender\n      await Axios.get(\"http://localhost:5000/search/\" + props.accountno).then(response => {\n        console.log(\"sender: \", response.data);\n        setSender(response.data);\n      }); //Receiver\n\n      await Axios.get(\"http://localhost:5000/search/\" + detail.accountNo).then(response => {\n        console.log(\"Receiver: \", response.data);\n        setReceiver(response.data);\n      });\n      console.log(\"sender= \", sender, \"receiver=\", receiver);\n      await Axios.post(\"http://localhost:5000/transaction\", {\n        sender: sender.name,\n        senderMail: sender.email,\n        senderAccountNo: sender.accountNo,\n        receiver: receiver.name,\n        receiverAccountNo: receiver.accountNo,\n        senderContactNo: sender.contactNo,\n        message: detail.message,\n        transferAmt: detail.amount\n      });\n    } catch (error) {\n      alert(\"Error!!!\");\n    }\n  };\n\n  const sendMoney = async () => {\n    try {\n      if (props.balance - detail.amount >= 0) {\n        //Sender\n        await Axios.patch(\"http://localhost:5000/update/\" + props.accountno, {\n          balance: props.balance - detail.amount\n        }); //Receiver\n\n        await Axios.patch(\"http://localhost:5000/update/\" + detail.accountNo, {\n          balance: Number(detail.balance) + Number(detail.amount)\n        });\n        await addTransaction();\n        setIsModal(true);\n        setStatus({\n          isSuccess: true,\n          img: done\n        });\n        setTimeout(() => {\n          props.onHide(); // window.location.reload(false);\n        }, 1500);\n      } else {\n        setIsModal(true);\n        setError({\n          isError: true,\n          error: \"Insufficient Balance!!\"\n        });\n        setStatus({\n          isSuccess: false,\n          img: failed\n        });\n        setTimeout(() => {\n          props.onHide();\n        }, 2000);\n      }\n    } catch (error) {\n      setError({\n        isError: true,\n        error: \"Unable to send money, Try Again..\"\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Modal, { ...props,\n      \"aria-labelledby\": \"contained-modal-title-vcenter\",\n      centered: true,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          id: \"contained-modal-title-vcenter\",\n          className: \"w-100 text-center title\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              fontSize: \"0.8em\",\n              color: colors.primary2\n            },\n            children: props.accountno\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 13\n          }, this), \"\\xA0\\xA0[\", /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              fontSize: \"0.8em\",\n              color: colors.secondary1\n            },\n            children: props.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 13\n          }, this), \"]\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"account-no\",\n            className: \"title2\",\n            style: {\n              width: \"35%\"\n            },\n            children: \"Account No :\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: detail.accountno,\n            placeholder: \"Receiver's Account no\",\n            className: \"input-field\",\n            style: {\n              width: \"60%\"\n            },\n            onChange: event => setDetail(prevState => {\n              return { ...prevState,\n                accountNo: event.target.value\n              };\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 13\n          }, this), error.isError === true && detail.name === \"\" ? /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              fontSize: \"0.9em\",\n              color: colors.primary2\n            },\n            children: error.error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 15\n          }, this) : null, detail.name !== \"\" ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"name\",\n              className: \"title2\",\n              style: {\n                width: \"35%\"\n              },\n              children: \"Full Name :\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: detail.name,\n              placeholder: \"Account Holder Name\",\n              className: \"input-field\",\n              style: {\n                width: \"60%\"\n              },\n              onChange: event => setDetail(prevState => {\n                return { ...prevState,\n                  name: event.target.value\n                };\n              }),\n              disabled: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"name\",\n              className: \"title2\",\n              style: {\n                width: \"35%\"\n              },\n              children: \"Email Id :\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: detail.email,\n              placeholder: \"Account Holder Email Id\",\n              className: \"input-field\",\n              style: {\n                width: \"60%\"\n              },\n              onChange: event => setDetail(prevState => {\n                return { ...prevState,\n                  email: event.target.value\n                };\n              }),\n              disabled: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"name\",\n              className: \"title2\",\n              style: {\n                width: \"35%\"\n              },\n              children: \"Amount :\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: detail.amount,\n              placeholder: \"Amount to send\",\n              className: \"input-field\",\n              style: {\n                width: \"60%\"\n              },\n              onChange: event => setDetail(prevState => {\n                return { ...prevState,\n                  amount: event.target.value\n                };\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"name\",\n              className: \"title2\",\n              style: {\n                width: \"35%\"\n              },\n              children: \"Message :\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: detail.message,\n              placeholder: \"Hi this is your birthday's gift.\",\n              className: \"input-field\",\n              style: {\n                width: \"60%\"\n              },\n              onChange: event => setDetail(prevState => {\n                return { ...prevState,\n                  message: event.target.value\n                };\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: props.onHide,\n          className: \"btn\",\n          style: {\n            backgroundColor: colors.primary2\n          },\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 11\n        }, this), btnTitle === \"Search User\" ? /*#__PURE__*/_jsxDEV(Button, {\n          onClick: searchUser,\n          children: btnTitle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(Button, {\n          onClick: sendMoney,\n          children: btnTitle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DoneComponent, {\n      data: status,\n      error: error,\n      show: isModal,\n      onHide: () => setIsModal(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(SendMoneyModal, \"/UADzKVvLmXqAtbz831cRL9QgTE=\");\n\n_c = SendMoneyModal;\nexport default SendMoneyModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"SendMoneyModal\");","map":{"version":3,"sources":["/home/immortal/Documents/React-files/Banking/frontend/src/App/components/SendMoneyModal.js"],"names":["Axios","React","useState","Modal","Button","colors","DoneComponent","done","failed","SendMoneyModal","props","detail","setDetail","accountNo","name","email","balance","amount","message","sender","setSender","receiver","setReceiver","btnTitle","setBtnTitle","error","setError","isError","isModal","setIsModal","status","setStatus","isSuccess","img","searchUser","get","then","response","data","accountno","prevState","catch","e","addTransaction","console","log","post","senderMail","senderAccountNo","receiverAccountNo","senderContactNo","contactNo","transferAmt","alert","sendMoney","patch","Number","setTimeout","onHide","fontSize","color","primary2","secondary1","width","event","target","value","backgroundColor"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,KAAT,EAAgBC,MAAhB,QAA8B,iBAA9B;AAEA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,IAAP,MAAiB,0BAAjB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;;;;AAEA,SAASC,cAAT,CAAwBC,KAAxB,EAA+B;AAAA;;AAC7B,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBV,QAAQ,CAAC;AACnCW,IAAAA,SAAS,EAAE,CADwB;AAEnCC,IAAAA,IAAI,EAAE,EAF6B;AAGnCC,IAAAA,KAAK,EAAE,EAH4B;AAInCC,IAAAA,OAAO,EAAE,CAJ0B;AAKnCC,IAAAA,MAAM,EAAE,CAL2B;AAMnCC,IAAAA,OAAO,EAAE;AAN0B,GAAD,CAApC,CAD6B,CAS7B;AACA;AACA;AACA;;AACA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBlB,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACmB,QAAD,EAAWC,WAAX,IAA0BpB,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACqB,QAAD,EAAWC,WAAX,IAA0BtB,QAAQ,CAAC,aAAD,CAAxC;AACA,QAAM,CAACuB,KAAD,EAAQC,QAAR,IAAoBxB,QAAQ,CAAC;AAAEyB,IAAAA,OAAO,EAAE,KAAX;AAAkBF,IAAAA,KAAK,EAAE;AAAzB,GAAD,CAAlC;AACA,QAAM,CAACG,OAAD,EAAUC,UAAV,IAAwB3B,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAAC4B,MAAD,EAASC,SAAT,IAAsB7B,QAAQ,CAAC;AAAE8B,IAAAA,SAAS,EAAE,KAAb;AAAoBC,IAAAA,GAAG,EAAE;AAAzB,GAAD,CAApC;;AAEA,QAAMC,UAAU,GAAG,MAAM;AACvBlC,IAAAA,KAAK,CAACmC,GAAN,CAAU,kCAAkCxB,MAAM,CAACE,SAAnD,EACGuB,IADH,CACSC,QAAD,IAAc;AAClB,UAAIA,QAAQ,CAACC,IAAT,CAAczB,SAAd,KAA4BH,KAAK,CAAC6B,SAAtC,EAAiD;AAC/C3B,QAAAA,SAAS,CAAE4B,SAAD,IAAe;AACvB,iBAAO,EACL,GAAGA,SADE;AAEL1B,YAAAA,IAAI,EAAEuB,QAAQ,CAACC,IAAT,CAAcxB,IAFf;AAGLC,YAAAA,KAAK,EAAEsB,QAAQ,CAACC,IAAT,CAAcvB,KAHhB;AAILC,YAAAA,OAAO,EAAEqB,QAAQ,CAACC,IAAT,CAActB;AAJlB,WAAP;AAMD,SAPQ,CAAT;AAQAU,QAAAA,QAAQ,CAAEc,SAAD,IAAe;AACtB,iBAAO,EAAE,GAAGA,SAAL;AAAgBb,YAAAA,OAAO,EAAE;AAAzB,WAAP;AACD,SAFO,CAAR;AAGAH,QAAAA,WAAW,CAAC,YAAD,CAAX;AACD,OAbD,MAaO;AACLE,QAAAA,QAAQ,CAAC;AACPC,UAAAA,OAAO,EAAE,IADF;AAEPF,UAAAA,KAAK,EAAE;AAFA,SAAD,CAAR;AAID;AACF,KArBH,EAsBGgB,KAtBH,CAsBUC,CAAD,IACLhB,QAAQ,CAAC;AAAEC,MAAAA,OAAO,EAAE,IAAX;AAAiBF,MAAAA,KAAK,EAAE;AAAxB,KAAD,CAvBZ;AAyBD,GA1BD;;AA4BA,QAAMkB,cAAc,GAAG,YAAY;AACjC,QAAI;AACF;AACA,YAAM3C,KAAK,CAACmC,GAAN,CAAU,kCAAkCzB,KAAK,CAAC6B,SAAlD,EAA6DH,IAA7D,CACHC,QAAD,IAAc;AACZO,QAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBR,QAAQ,CAACC,IAAjC;AAEAlB,QAAAA,SAAS,CAACiB,QAAQ,CAACC,IAAV,CAAT;AACD,OALG,CAAN,CAFE,CASF;;AACA,YAAMtC,KAAK,CAACmC,GAAN,CAAU,kCAAkCxB,MAAM,CAACE,SAAnD,EAA8DuB,IAA9D,CACHC,QAAD,IAAc;AACZO,QAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BR,QAAQ,CAACC,IAAnC;AACAhB,QAAAA,WAAW,CAACe,QAAQ,CAACC,IAAV,CAAX;AACD,OAJG,CAAN;AAMAM,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwB1B,MAAxB,EAAgC,WAAhC,EAA6CE,QAA7C;AACA,YAAMrB,KAAK,CAAC8C,IAAN,CAAW,mCAAX,EAAgD;AACpD3B,QAAAA,MAAM,EAAEA,MAAM,CAACL,IADqC;AAEpDiC,QAAAA,UAAU,EAAE5B,MAAM,CAACJ,KAFiC;AAGpDiC,QAAAA,eAAe,EAAE7B,MAAM,CAACN,SAH4B;AAIpDQ,QAAAA,QAAQ,EAAEA,QAAQ,CAACP,IAJiC;AAKpDmC,QAAAA,iBAAiB,EAAE5B,QAAQ,CAACR,SALwB;AAMpDqC,QAAAA,eAAe,EAAE/B,MAAM,CAACgC,SAN4B;AAOpDjC,QAAAA,OAAO,EAAEP,MAAM,CAACO,OAPoC;AAQpDkC,QAAAA,WAAW,EAAEzC,MAAM,CAACM;AARgC,OAAhD,CAAN;AAUD,KA3BD,CA2BE,OAAOQ,KAAP,EAAc;AACd4B,MAAAA,KAAK,CAAC,UAAD,CAAL;AACD;AACF,GA/BD;;AAiCA,QAAMC,SAAS,GAAG,YAAY;AAC5B,QAAI;AACF,UAAI5C,KAAK,CAACM,OAAN,GAAgBL,MAAM,CAACM,MAAvB,IAAiC,CAArC,EAAwC;AACtC;AACA,cAAMjB,KAAK,CAACuD,KAAN,CAAY,kCAAkC7C,KAAK,CAAC6B,SAApD,EAA+D;AACnEvB,UAAAA,OAAO,EAAEN,KAAK,CAACM,OAAN,GAAgBL,MAAM,CAACM;AADmC,SAA/D,CAAN,CAFsC,CAKtC;;AACA,cAAMjB,KAAK,CAACuD,KAAN,CAAY,kCAAkC5C,MAAM,CAACE,SAArD,EAAgE;AACpEG,UAAAA,OAAO,EAAEwC,MAAM,CAAC7C,MAAM,CAACK,OAAR,CAAN,GAAyBwC,MAAM,CAAC7C,MAAM,CAACM,MAAR;AAD4B,SAAhE,CAAN;AAGA,cAAM0B,cAAc,EAApB;AACAd,QAAAA,UAAU,CAAC,IAAD,CAAV;AACAE,QAAAA,SAAS,CAAC;AAAEC,UAAAA,SAAS,EAAE,IAAb;AAAmBC,UAAAA,GAAG,EAAE1B;AAAxB,SAAD,CAAT;AACAkD,QAAAA,UAAU,CAAC,MAAM;AACf/C,UAAAA,KAAK,CAACgD,MAAN,GADe,CAEf;AACD,SAHS,EAGP,IAHO,CAAV;AAID,OAhBD,MAgBO;AACL7B,QAAAA,UAAU,CAAC,IAAD,CAAV;AACAH,QAAAA,QAAQ,CAAC;AAAEC,UAAAA,OAAO,EAAE,IAAX;AAAiBF,UAAAA,KAAK,EAAE;AAAxB,SAAD,CAAR;AACAM,QAAAA,SAAS,CAAC;AAAEC,UAAAA,SAAS,EAAE,KAAb;AAAoBC,UAAAA,GAAG,EAAEzB;AAAzB,SAAD,CAAT;AACAiD,QAAAA,UAAU,CAAC,MAAM;AACf/C,UAAAA,KAAK,CAACgD,MAAN;AACD,SAFS,EAEP,IAFO,CAAV;AAGD;AACF,KAzBD,CAyBE,OAAOjC,KAAP,EAAc;AACdC,MAAAA,QAAQ,CAAC;AAAEC,QAAAA,OAAO,EAAE,IAAX;AAAiBF,QAAAA,KAAK,EAAE;AAAxB,OAAD,CAAR;AACD;AACF,GA7BD;;AA+BA,sBACE;AAAA,4BACE,QAAC,KAAD,OACMf,KADN;AAEE,yBAAgB,+BAFlB;AAGE,MAAA,QAAQ,MAHV;AAAA,8BAKE,QAAC,KAAD,CAAO,MAAP;AAAc,QAAA,WAAW,MAAzB;AAAA,+BACE,QAAC,KAAD,CAAO,KAAP;AACE,UAAA,EAAE,EAAC,+BADL;AAEE,UAAA,SAAS,EAAC,yBAFZ;AAAA,kCAIE;AAAM,YAAA,KAAK,EAAE;AAAEiD,cAAAA,QAAQ,EAAE,OAAZ;AAAqBC,cAAAA,KAAK,EAAEvD,MAAM,CAACwD;AAAnC,aAAb;AAAA,sBACGnD,KAAK,CAAC6B;AADT;AAAA;AAAA;AAAA;AAAA,kBAJF,4BAQE;AAAM,YAAA,KAAK,EAAE;AAAEoB,cAAAA,QAAQ,EAAE,OAAZ;AAAqBC,cAAAA,KAAK,EAAEvD,MAAM,CAACyD;AAAnC,aAAb;AAAA,sBACGpD,KAAK,CAACI;AADT;AAAA;AAAA;AAAA;AAAA,kBARF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cALF,eAoBE,QAAC,KAAD,CAAO,IAAP;AAAA,+BACE;AAAA,kCACE;AACE,YAAA,OAAO,EAAC,YADV;AAEE,YAAA,SAAS,EAAC,QAFZ;AAGE,YAAA,KAAK,EAAE;AAAEiD,cAAAA,KAAK,EAAE;AAAT,aAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAQE;AACE,YAAA,IAAI,EAAC,MADP;AAEE,YAAA,KAAK,EAAEpD,MAAM,CAAC4B,SAFhB;AAGE,YAAA,WAAW,EAAC,uBAHd;AAIE,YAAA,SAAS,EAAC,aAJZ;AAKE,YAAA,KAAK,EAAE;AAAEwB,cAAAA,KAAK,EAAE;AAAT,aALT;AAME,YAAA,QAAQ,EAAGC,KAAD,IACRpD,SAAS,CAAE4B,SAAD,IAAe;AACvB,qBAAO,EAAE,GAAGA,SAAL;AAAgB3B,gBAAAA,SAAS,EAAEmD,KAAK,CAACC,MAAN,CAAaC;AAAxC,eAAP;AACD,aAFQ;AAPb;AAAA;AAAA;AAAA;AAAA,kBARF,EAoBGzC,KAAK,CAACE,OAAN,KAAkB,IAAlB,IAA0BhB,MAAM,CAACG,IAAP,KAAgB,EAA1C,gBACC;AAAM,YAAA,KAAK,EAAE;AAAE6C,cAAAA,QAAQ,EAAE,OAAZ;AAAqBC,cAAAA,KAAK,EAAEvD,MAAM,CAACwD;AAAnC,aAAb;AAAA,sBACGpC,KAAK,CAACA;AADT;AAAA;AAAA;AAAA;AAAA,kBADD,GAIG,IAxBN,EAyBGd,MAAM,CAACG,IAAP,KAAgB,EAAhB,gBACC;AAAA,oCACE;AACE,cAAA,OAAO,EAAC,MADV;AAEE,cAAA,SAAS,EAAC,QAFZ;AAGE,cAAA,KAAK,EAAE;AAAEiD,gBAAAA,KAAK,EAAE;AAAT,eAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAQE;AACE,cAAA,IAAI,EAAC,MADP;AAEE,cAAA,KAAK,EAAEpD,MAAM,CAACG,IAFhB;AAGE,cAAA,WAAW,EAAC,qBAHd;AAIE,cAAA,SAAS,EAAC,aAJZ;AAKE,cAAA,KAAK,EAAE;AAAEiD,gBAAAA,KAAK,EAAE;AAAT,eALT;AAME,cAAA,QAAQ,EAAGC,KAAD,IACRpD,SAAS,CAAE4B,SAAD,IAAe;AACvB,uBAAO,EAAE,GAAGA,SAAL;AAAgB1B,kBAAAA,IAAI,EAAEkD,KAAK,CAACC,MAAN,CAAaC;AAAnC,iBAAP;AACD,eAFQ,CAPb;AAWE,cAAA,QAAQ;AAXV;AAAA;AAAA;AAAA;AAAA,oBARF,eAqBE;AACE,cAAA,OAAO,EAAC,MADV;AAEE,cAAA,SAAS,EAAC,QAFZ;AAGE,cAAA,KAAK,EAAE;AAAEH,gBAAAA,KAAK,EAAE;AAAT,eAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBArBF,eA4BE;AACE,cAAA,IAAI,EAAC,MADP;AAEE,cAAA,KAAK,EAAEpD,MAAM,CAACI,KAFhB;AAGE,cAAA,WAAW,EAAC,yBAHd;AAIE,cAAA,SAAS,EAAC,aAJZ;AAKE,cAAA,KAAK,EAAE;AAAEgD,gBAAAA,KAAK,EAAE;AAAT,eALT;AAME,cAAA,QAAQ,EAAGC,KAAD,IACRpD,SAAS,CAAE4B,SAAD,IAAe;AACvB,uBAAO,EAAE,GAAGA,SAAL;AAAgBzB,kBAAAA,KAAK,EAAEiD,KAAK,CAACC,MAAN,CAAaC;AAApC,iBAAP;AACD,eAFQ,CAPb;AAWE,cAAA,QAAQ;AAXV;AAAA;AAAA;AAAA;AAAA,oBA5BF,eAyCE;AACE,cAAA,OAAO,EAAC,MADV;AAEE,cAAA,SAAS,EAAC,QAFZ;AAGE,cAAA,KAAK,EAAE;AAAEH,gBAAAA,KAAK,EAAE;AAAT,eAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAzCF,eAgDE;AACE,cAAA,IAAI,EAAC,MADP;AAEE,cAAA,KAAK,EAAEpD,MAAM,CAACM,MAFhB;AAGE,cAAA,WAAW,EAAC,gBAHd;AAIE,cAAA,SAAS,EAAC,aAJZ;AAKE,cAAA,KAAK,EAAE;AAAE8C,gBAAAA,KAAK,EAAE;AAAT,eALT;AAME,cAAA,QAAQ,EAAGC,KAAD,IACRpD,SAAS,CAAE4B,SAAD,IAAe;AACvB,uBAAO,EAAE,GAAGA,SAAL;AAAgBvB,kBAAAA,MAAM,EAAE+C,KAAK,CAACC,MAAN,CAAaC;AAArC,iBAAP;AACD,eAFQ;AAPb;AAAA;AAAA;AAAA;AAAA,oBAhDF,eA4DE;AACE,cAAA,OAAO,EAAC,MADV;AAEE,cAAA,SAAS,EAAC,QAFZ;AAGE,cAAA,KAAK,EAAE;AAAEH,gBAAAA,KAAK,EAAE;AAAT,eAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBA5DF,eAmEE;AACE,cAAA,IAAI,EAAC,MADP;AAEE,cAAA,KAAK,EAAEpD,MAAM,CAACO,OAFhB;AAGE,cAAA,WAAW,EAAC,kCAHd;AAIE,cAAA,SAAS,EAAC,aAJZ;AAKE,cAAA,KAAK,EAAE;AAAE6C,gBAAAA,KAAK,EAAE;AAAT,eALT;AAME,cAAA,QAAQ,EAAGC,KAAD,IACRpD,SAAS,CAAE4B,SAAD,IAAe;AACvB,uBAAO,EAAE,GAAGA,SAAL;AAAgBtB,kBAAAA,OAAO,EAAE8C,KAAK,CAACC,MAAN,CAAaC;AAAtC,iBAAP;AACD,eAFQ;AAPb;AAAA;AAAA;AAAA;AAAA,oBAnEF;AAAA,0BADD,GAiFG,IA1GN;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cApBF,eAkIE,QAAC,KAAD,CAAO,MAAP;AAAA,gCACE,QAAC,MAAD;AACE,UAAA,OAAO,EAAExD,KAAK,CAACgD,MADjB;AAEE,UAAA,SAAS,EAAC,KAFZ;AAGE,UAAA,KAAK,EAAE;AAAES,YAAAA,eAAe,EAAE9D,MAAM,CAACwD;AAA1B,WAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAQGtC,QAAQ,KAAK,aAAb,gBACC,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAEW,UAAjB;AAAA,oBAA8BX;AAA9B;AAAA;AAAA;AAAA;AAAA,gBADD,gBAGC,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAE+B,SAAjB;AAAA,oBAA6B/B;AAA7B;AAAA;AAAA;AAAA;AAAA,gBAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAlIF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAkJE,QAAC,aAAD;AACE,MAAA,IAAI,EAAEO,MADR;AAEE,MAAA,KAAK,EAAEL,KAFT;AAGE,MAAA,IAAI,EAAEG,OAHR;AAIE,MAAA,MAAM,EAAE,MAAMC,UAAU,CAAC,KAAD;AAJ1B;AAAA;AAAA;AAAA;AAAA,YAlJF;AAAA,kBADF;AA2JD;;GA3QQpB,c;;KAAAA,c;AA6QT,eAAeA,cAAf","sourcesContent":["import Axios from \"axios\";\nimport React, { useState } from \"react\";\nimport { Modal, Button } from \"react-bootstrap\";\n\nimport colors from \"../../config/colors\";\nimport DoneComponent from \"./DoneComponent\";\nimport done from \"../../assets/success.png\";\nimport failed from \"../../assets/failed.png\";\n\nfunction SendMoneyModal(props) {\n  const [detail, setDetail] = useState({\n    accountNo: 0,\n    name: \"\",\n    email: \"\",\n    balance: 0,\n    amount: 0,\n    message: \"\",\n  });\n  // const [transacDetails, setTransacDetails] = useState({\n  //   sender: {},\n  //   receiver: {},\n  // });\n  const [sender, setSender] = useState({});\n  const [receiver, setReceiver] = useState({});\n  const [btnTitle, setBtnTitle] = useState(\"Search User\");\n  const [error, setError] = useState({ isError: false, error: \"\" });\n  const [isModal, setIsModal] = useState(false);\n  const [status, setStatus] = useState({ isSuccess: false, img: \"\" });\n\n  const searchUser = () => {\n    Axios.get(\"http://localhost:5000/search/\" + detail.accountNo)\n      .then((response) => {\n        if (response.data.accountNo !== props.accountno) {\n          setDetail((prevState) => {\n            return {\n              ...prevState,\n              name: response.data.name,\n              email: response.data.email,\n              balance: response.data.balance,\n            };\n          });\n          setError((prevState) => {\n            return { ...prevState, isError: false };\n          });\n          setBtnTitle(\"Send Money\");\n        } else {\n          setError({\n            isError: true,\n            error: \"You can't send money to yourself...\",\n          });\n        }\n      })\n      .catch((e) =>\n        setError({ isError: true, error: \"Invalid Account No...\" })\n      );\n  };\n\n  const addTransaction = async () => {\n    try {\n      //sender\n      await Axios.get(\"http://localhost:5000/search/\" + props.accountno).then(\n        (response) => {\n          console.log(\"sender: \", response.data);\n\n          setSender(response.data);\n        }\n      );\n      //Receiver\n      await Axios.get(\"http://localhost:5000/search/\" + detail.accountNo).then(\n        (response) => {\n          console.log(\"Receiver: \", response.data);\n          setReceiver(response.data);\n        }\n      );\n      console.log(\"sender= \", sender, \"receiver=\", receiver);\n      await Axios.post(\"http://localhost:5000/transaction\", {\n        sender: sender.name,\n        senderMail: sender.email,\n        senderAccountNo: sender.accountNo,\n        receiver: receiver.name,\n        receiverAccountNo: receiver.accountNo,\n        senderContactNo: sender.contactNo,\n        message: detail.message,\n        transferAmt: detail.amount,\n      });\n    } catch (error) {\n      alert(\"Error!!!\");\n    }\n  };\n\n  const sendMoney = async () => {\n    try {\n      if (props.balance - detail.amount >= 0) {\n        //Sender\n        await Axios.patch(\"http://localhost:5000/update/\" + props.accountno, {\n          balance: props.balance - detail.amount,\n        });\n        //Receiver\n        await Axios.patch(\"http://localhost:5000/update/\" + detail.accountNo, {\n          balance: Number(detail.balance) + Number(detail.amount),\n        });\n        await addTransaction();\n        setIsModal(true);\n        setStatus({ isSuccess: true, img: done });\n        setTimeout(() => {\n          props.onHide();\n          // window.location.reload(false);\n        }, 1500);\n      } else {\n        setIsModal(true);\n        setError({ isError: true, error: \"Insufficient Balance!!\" });\n        setStatus({ isSuccess: false, img: failed });\n        setTimeout(() => {\n          props.onHide();\n        }, 2000);\n      }\n    } catch (error) {\n      setError({ isError: true, error: \"Unable to send money, Try Again..\" });\n    }\n  };\n\n  return (\n    <>\n      <Modal\n        {...props}\n        aria-labelledby=\"contained-modal-title-vcenter\"\n        centered\n      >\n        <Modal.Header closeButton>\n          <Modal.Title\n            id=\"contained-modal-title-vcenter\"\n            className=\"w-100 text-center title\"\n          >\n            <span style={{ fontSize: \"0.8em\", color: colors.primary2 }}>\n              {props.accountno}\n            </span>\n            &nbsp;&nbsp;[\n            <span style={{ fontSize: \"0.8em\", color: colors.secondary1 }}>\n              {props.name}\n            </span>\n            ]\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <div>\n            <label\n              htmlFor=\"account-no\"\n              className=\"title2\"\n              style={{ width: \"35%\" }}\n            >\n              Account No :\n            </label>\n            <input\n              type=\"text\"\n              value={detail.accountno}\n              placeholder=\"Receiver's Account no\"\n              className=\"input-field\"\n              style={{ width: \"60%\" }}\n              onChange={(event) =>\n                setDetail((prevState) => {\n                  return { ...prevState, accountNo: event.target.value };\n                })\n              }\n            />\n            {error.isError === true && detail.name === \"\" ? (\n              <span style={{ fontSize: \"0.9em\", color: colors.primary2 }}>\n                {error.error}\n              </span>\n            ) : null}\n            {detail.name !== \"\" ? (\n              <>\n                <label\n                  htmlFor=\"name\"\n                  className=\"title2\"\n                  style={{ width: \"35%\" }}\n                >\n                  Full Name :\n                </label>\n                <input\n                  type=\"text\"\n                  value={detail.name}\n                  placeholder=\"Account Holder Name\"\n                  className=\"input-field\"\n                  style={{ width: \"60%\" }}\n                  onChange={(event) =>\n                    setDetail((prevState) => {\n                      return { ...prevState, name: event.target.value };\n                    })\n                  }\n                  disabled\n                />\n                <label\n                  htmlFor=\"name\"\n                  className=\"title2\"\n                  style={{ width: \"35%\" }}\n                >\n                  Email Id :\n                </label>\n                <input\n                  type=\"text\"\n                  value={detail.email}\n                  placeholder=\"Account Holder Email Id\"\n                  className=\"input-field\"\n                  style={{ width: \"60%\" }}\n                  onChange={(event) =>\n                    setDetail((prevState) => {\n                      return { ...prevState, email: event.target.value };\n                    })\n                  }\n                  disabled\n                />\n                <label\n                  htmlFor=\"name\"\n                  className=\"title2\"\n                  style={{ width: \"35%\" }}\n                >\n                  Amount :\n                </label>\n                <input\n                  type=\"text\"\n                  value={detail.amount}\n                  placeholder=\"Amount to send\"\n                  className=\"input-field\"\n                  style={{ width: \"60%\" }}\n                  onChange={(event) =>\n                    setDetail((prevState) => {\n                      return { ...prevState, amount: event.target.value };\n                    })\n                  }\n                />\n                <label\n                  htmlFor=\"name\"\n                  className=\"title2\"\n                  style={{ width: \"35%\" }}\n                >\n                  Message :\n                </label>\n                <input\n                  type=\"text\"\n                  value={detail.message}\n                  placeholder=\"Hi this is your birthday's gift.\"\n                  className=\"input-field\"\n                  style={{ width: \"60%\" }}\n                  onChange={(event) =>\n                    setDetail((prevState) => {\n                      return { ...prevState, message: event.target.value };\n                    })\n                  }\n                />\n              </>\n            ) : null}\n          </div>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button\n            onClick={props.onHide}\n            className=\"btn\"\n            style={{ backgroundColor: colors.primary2 }}\n          >\n            Cancel\n          </Button>\n          {btnTitle === \"Search User\" ? (\n            <Button onClick={searchUser}>{btnTitle}</Button>\n          ) : (\n            <Button onClick={sendMoney}>{btnTitle}</Button>\n          )}\n        </Modal.Footer>\n      </Modal>\n      <DoneComponent\n        data={status}\n        error={error}\n        show={isModal}\n        onHide={() => setIsModal(false)}\n      />\n    </>\n  );\n}\n\nexport default SendMoneyModal;\n"]},"metadata":{},"sourceType":"module"}