{"ast":null,"code":"var _jsxFileName = \"/home/immortal/Documents/React-files/Banking/frontend/src/App/components/TransacTable.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport Axios from \"axios\";\nimport TransacTableRow from \"./TransacTableRow\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction TransacTable(props) {\n  _s();\n\n  const [state, setState] = useState([]);\n  useEffect(() => {\n    Axios.get(\"http://localhost:5000/allTransacs\").then(response => setState(response.data)).catch(e => {\n      console.log(\"Can't catch the response...\", e);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"table-responsive-xl\",\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        className: \"thead-dark\",\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              className: \"text-center\",\n              children: \"Sr.No\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 23,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              className: \"text-center\",\n              children: \"Sender Account No\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 26,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              className: \"text-center\",\n              children: \"Receiver Account No\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              className: \"text-center\",\n              children: \"Transfer Amount\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              className: \"text-center\",\n              children: \"Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            className: \"text-center\",\n            children: \"Action\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: state.map((val, key) => {\n          return /*#__PURE__*/_jsxDEV(TransacTableRow, {\n            srNo: key + 1,\n            sender: val.sender,\n            senderAccountNo: val.senderAccountNo,\n            receiver: val.receiver,\n            receiverAccountNo: val.receiverAccountNo,\n            transferAmt: val.transferAmt,\n            senderContactNo: val.senderContactNo,\n            message: val.message,\n            createdAt: val.createdAt\n          }, val._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TransacTable, \"7zZJjGiSRppMnnlYfwuyXOUEkjY=\");\n\n_c = TransacTable;\nexport default TransacTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"TransacTable\");","map":{"version":3,"sources":["/home/immortal/Documents/React-files/Banking/frontend/src/App/components/TransacTable.js"],"names":["React","useEffect","useState","Axios","TransacTableRow","TransacTable","props","state","setState","get","then","response","data","catch","e","console","log","map","val","key","sender","senderAccountNo","receiver","receiverAccountNo","transferAmt","senderContactNo","message","createdAt","_id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAOC,eAAP,MAA4B,mBAA5B;;;;AAEA,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAAA;;AAC3B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdE,IAAAA,KAAK,CAACM,GAAN,CAAU,mCAAV,EACGC,IADH,CACSC,QAAD,IAAcH,QAAQ,CAACG,QAAQ,CAACC,IAAV,CAD9B,EAEGC,KAFH,CAEUC,CAAD,IAAO;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ,EAA2CF,CAA3C;AACD,KAJH;AAKD,GANQ,EAMN,EANM,CAAT;AAQA,sBACE;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA,2BACE;AAAO,MAAA,SAAS,EAAC,OAAjB;AAAA,8BACE;AAAO,QAAA,SAAS,EAAC,YAAjB;AAAA,+BACE;AAAA,kCACE;AAAA,oCACE;AAAI,cAAA,KAAK,EAAC,KAAV;AAAgB,cAAA,SAAS,EAAC,aAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAIE;AAAI,cAAA,KAAK,EAAC,KAAV;AAAgB,cAAA,SAAS,EAAC,aAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJF,eAOE;AAAI,cAAA,KAAK,EAAC,KAAV;AAAgB,cAAA,SAAS,EAAC,aAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAPF,eAUE;AAAI,cAAA,KAAK,EAAC,KAAV;AAAgB,cAAA,SAAS,EAAC,aAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAVF,eAaE;AAAI,cAAA,KAAK,EAAC,KAAV;AAAgB,cAAA,SAAS,EAAC,aAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAbF;AAAA,0BADF,eAkBE;AAAI,YAAA,KAAK,EAAC,KAAV;AAAgB,YAAA,SAAS,EAAC,aAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAlBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAyBE;AAAA,kBACGP,KAAK,CAACU,GAAN,CAAU,CAACC,GAAD,EAAMC,GAAN,KAAc;AACvB,8BACE,QAAC,eAAD;AAEE,YAAA,IAAI,EAAEA,GAAG,GAAG,CAFd;AAGE,YAAA,MAAM,EAAED,GAAG,CAACE,MAHd;AAIE,YAAA,eAAe,EAAEF,GAAG,CAACG,eAJvB;AAKE,YAAA,QAAQ,EAAEH,GAAG,CAACI,QALhB;AAME,YAAA,iBAAiB,EAAEJ,GAAG,CAACK,iBANzB;AAOE,YAAA,WAAW,EAAEL,GAAG,CAACM,WAPnB;AAQE,YAAA,eAAe,EAAEN,GAAG,CAACO,eARvB;AASE,YAAA,OAAO,EAAEP,GAAG,CAACQ,OATf;AAUE,YAAA,SAAS,EAAER,GAAG,CAACS;AAVjB,aACOT,GAAG,CAACU,GADX;AAAA;AAAA;AAAA;AAAA,kBADF;AAcD,SAfA;AADH;AAAA;AAAA;AAAA;AAAA,cAzBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAuED;;GAlFQvB,Y;;KAAAA,Y;AAoFT,eAAeA,YAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Axios from \"axios\";\n\nimport TransacTableRow from \"./TransacTableRow\";\n\nfunction TransacTable(props) {\n  const [state, setState] = useState([]);\n\n  useEffect(() => {\n    Axios.get(\"http://localhost:5000/allTransacs\")\n      .then((response) => setState(response.data))\n      .catch((e) => {\n        console.log(\"Can't catch the response...\", e);\n      });\n  }, []);\n\n  return (\n    <div className=\"table-responsive-xl\">\n      <table className=\"table\">\n        <thead className=\"thead-dark\">\n          <tr>\n            <>\n              <th scope=\"col\" className=\"text-center\">\n                Sr.No\n              </th>\n              <th scope=\"col\" className=\"text-center\">\n                Sender Account No\n              </th>\n              <th scope=\"col\" className=\"text-center\">\n                Receiver Account No\n              </th>\n              <th scope=\"col\" className=\"text-center\">\n                Transfer Amount\n              </th>\n              <th scope=\"col\" className=\"text-center\">\n                Date\n              </th>\n            </>\n            <th scope=\"col\" className=\"text-center\">\n              Action\n            </th>\n          </tr>\n        </thead>\n        <tbody>\n          {state.map((val, key) => {\n            return (\n              <TransacTableRow\n                key={val._id}\n                srNo={key + 1}\n                sender={val.sender}\n                senderAccountNo={val.senderAccountNo}\n                receiver={val.receiver}\n                receiverAccountNo={val.receiverAccountNo}\n                transferAmt={val.transferAmt}\n                senderContactNo={val.senderContactNo}\n                message={val.message}\n                createdAt={val.createdAt}\n              />\n            );\n          })}\n        </tbody>\n      </table>\n      {/* {isUpdateModal ? (\n        <UpdateUserModal\n          show={isUpdateModal}\n          onHide={() => setIsUpdateModal(false)}\n          accountno={getProps.accountNo}\n        />\n      ) : null}\n      {isDeleteModal ? (\n        <DeleteUserModal\n          show={isDeleteModal}\n          onHide={() => setIsDeleteModal(false)}\n          accountno={getProps.accountNo}\n        />\n      ) : null}\n      {isSendMoneyModal ? (\n        <SendMoneyModal\n          show={isSendMoneyModal}\n          onHide={() => setIsSendMoneyModal(false)}\n          accountno={getProps.accountNo}\n          name={getProps.name}\n          balance={getProps.balance}\n        />\n      ) : null} */}\n    </div>\n  );\n}\n\nexport default TransacTable;\n"]},"metadata":{},"sourceType":"module"}