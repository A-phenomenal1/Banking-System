{"ast":null,"code":"var _jsxFileName = \"/home/immortal/Documents/React-files/Banking/frontend/src/App/components/Table.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport Axios from \"axios\";\nimport TableRow from \"./TableRow\";\nimport UpdateUserModal from \"./UpdateUserModal\";\nimport DeleteUserModal from \"./DeleteUserModal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Table() {\n  _s();\n\n  const [state, setState] = useState([]);\n  const [isModal, setIsModal] = useState(false);\n  const [isDeleteModal, setIsDeleteModal] = useState(false);\n  const [getProps, setGetProps] = useState({\n    accountNo: \"\",\n    name: \"\"\n  });\n\n  const updateUser = accountNo => {\n    setIsModal(true);\n    setGetProps(prevState => {\n      return { ...prevState,\n        accountNo\n      };\n    }); // setAccountNo(accountNo);\n  };\n\n  const deleteUser = accountNo => {\n    setIsDeleteModal(true);\n    setGetProps(prevState => {\n      return { ...prevState,\n        accountNo\n      };\n    });\n  };\n\n  const sendMoney = (accountNo, name) => {\n    setGetProps({\n      accountNo,\n      name\n    });\n    console.log(\"accountNo:\", accountNo, name);\n  };\n\n  useEffect(() => {\n    Axios.get(\"http://localhost:5000/allUsers\").then(response => setState(response.data)).catch(e => {\n      console.log(\"Can't catch the response...\", e);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"table-responsive\",\n    children: [/*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table table-striped table-hover\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        className: \"thead-dark\",\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            className: \"text-center\",\n            children: \"Sr.No\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            className: \"text-center\",\n            children: \"Account No\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            className: \"text-center\",\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            className: \"text-center\",\n            children: \"Email Id\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            className: \"text-center\",\n            children: \"Balance\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            className: \"text-center\",\n            children: \"Contact No\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            className: \"text-center\",\n            children: \"Account Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            className: \"text-center\",\n            children: \"Actions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: state.map((val, key) => {\n          return /*#__PURE__*/_jsxDEV(TableRow, {\n            srNo: key + 1,\n            accountNo: val.accountNo,\n            name: val.name,\n            email: val.email,\n            balance: val.balance,\n            contactNo: val.contactNo,\n            accountType: val.accountType,\n            updateCallback: updateUser,\n            deleteCallback: deleteUser,\n            sendMoneyCallback: sendMoney\n          }, val._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), isModal ? /*#__PURE__*/_jsxDEV(UpdateUserModal, {\n      show: isModal,\n      onHide: () => setIsModal(false),\n      accountno: getProps.accountNo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }, this) : null, isDeleteModal ? /*#__PURE__*/_jsxDEV(DeleteUserModal, {\n      show: isDeleteModal,\n      onHide: () => setIsDeleteModal(false),\n      accountno: getProps.accountNo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Table, \"AAF/f2IqSTAdbQwElbsNf05IkXg=\");\n\n_c = Table;\nexport default Table;\n\nvar _c;\n\n$RefreshReg$(_c, \"Table\");","map":{"version":3,"sources":["/home/immortal/Documents/React-files/Banking/frontend/src/App/components/Table.js"],"names":["React","useEffect","useState","Axios","TableRow","UpdateUserModal","DeleteUserModal","Table","state","setState","isModal","setIsModal","isDeleteModal","setIsDeleteModal","getProps","setGetProps","accountNo","name","updateUser","prevState","deleteUser","sendMoney","console","log","get","then","response","data","catch","e","map","val","key","email","balance","contactNo","accountType","_id"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Axios from \"axios\";\n\nimport TableRow from \"./TableRow\";\nimport UpdateUserModal from \"./UpdateUserModal\";\nimport DeleteUserModal from \"./DeleteUserModal\";\n\nfunction Table() {\n  const [state, setState] = useState([]);\n  const [isModal, setIsModal] = useState(false);\n  const [isDeleteModal, setIsDeleteModal] = useState(false);\n  const [getProps, setGetProps] = useState({ accountNo: \"\", name: \"\" });\n\n  const updateUser = (accountNo) => {\n    setIsModal(true);\n    setGetProps((prevState) => {\n      return {\n        ...prevState,\n        accountNo,\n      };\n    });\n    // setAccountNo(accountNo);\n  };\n\n  const deleteUser = (accountNo) => {\n    setIsDeleteModal(true);\n    setGetProps((prevState) => {\n      return {\n        ...prevState,\n        accountNo,\n      };\n    });\n  };\n\n  const sendMoney = (accountNo, name) => {\n    setGetProps({\n      accountNo,\n      name,\n    });\n    console.log(\"accountNo:\", accountNo, name);\n  };\n\n  useEffect(() => {\n    Axios.get(\"http://localhost:5000/allUsers\")\n      .then((response) => setState(response.data))\n      .catch((e) => {\n        console.log(\"Can't catch the response...\", e);\n      });\n  }, []);\n\n  return (\n    <div className=\"table-responsive\">\n      <table className=\"table table-striped table-hover\">\n        <thead className=\"thead-dark\">\n          <tr>\n            <th scope=\"col\" className=\"text-center\">\n              Sr.No\n            </th>\n            <th scope=\"col\" className=\"text-center\">\n              Account No\n            </th>\n            <th scope=\"col\" className=\"text-center\">\n              Name\n            </th>\n            <th scope=\"col\" className=\"text-center\">\n              Email Id\n            </th>\n            <th scope=\"col\" className=\"text-center\">\n              Balance\n            </th>\n            <th scope=\"col\" className=\"text-center\">\n              Contact No\n            </th>\n            <th scope=\"col\" className=\"text-center\">\n              Account Type\n            </th>\n            <th scope=\"col\" className=\"text-center\">\n              Actions\n            </th>\n          </tr>\n        </thead>\n        <tbody>\n          {state.map((val, key) => {\n            return (\n              <TableRow\n                key={val._id}\n                srNo={key + 1}\n                accountNo={val.accountNo}\n                name={val.name}\n                email={val.email}\n                balance={val.balance}\n                contactNo={val.contactNo}\n                accountType={val.accountType}\n                updateCallback={updateUser}\n                deleteCallback={deleteUser}\n                sendMoneyCallback={sendMoney}\n              />\n            );\n          })}\n        </tbody>\n      </table>\n      {isModal ? (\n        <UpdateUserModal\n          show={isModal}\n          onHide={() => setIsModal(false)}\n          accountno={getProps.accountNo}\n        />\n      ) : null}\n      {isDeleteModal ? (\n        <DeleteUserModal\n          show={isDeleteModal}\n          onHide={() => setIsDeleteModal(false)}\n          accountno={getProps.accountNo}\n        />\n      ) : null}\n    </div>\n  );\n}\n\nexport default Table;\n"]},"metadata":{},"sourceType":"module"}