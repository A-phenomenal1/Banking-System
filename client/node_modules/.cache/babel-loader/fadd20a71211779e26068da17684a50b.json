{"ast":null,"code":"var _jsxFileName = \"/home/immortal/Documents/React-files/Banking/frontend/src/App/components/Table.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport Axios from \"axios\";\nimport TableRow from \"./TableRow\";\nimport ModalComponent from \"./ModalComponent\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Table() {\n  _s();\n\n  const [state, setState] = useState([]);\n  const [isModal, setIsModal] = useState(false);\n  const [accountNo, setAccountNo] = useState(\"\");\n\n  const updateUser = accountNo => {\n    setIsModal(true);\n    setAccountNo(accountNo);\n  };\n\n  useEffect(() => {\n    Axios.get(\"http://localhost:5000/allUsers\").then(response => setState(response.data)).catch(e => {\n      console.log(\"Can't catch the response...\", e);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"table-responsive\",\n    children: [/*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table table-striped table-hover\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        className: \"thead-dark\",\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            className: \"text-center\",\n            children: \"Sr.No\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            className: \"text-center\",\n            children: \"Account No\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            className: \"text-center\",\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            className: \"text-center\",\n            children: \"Email Id\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            className: \"text-center\",\n            children: \"Balance\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            className: \"text-center\",\n            children: \"Contact No\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            className: \"text-center\",\n            children: \"Account Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            className: \"text-center\",\n            children: \"Actions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: state.map((val, key) => {\n          return /*#__PURE__*/_jsxDEV(TableRow, {\n            srNo: key + 1,\n            accountNo: val.accountNo,\n            name: val.name,\n            email: val.email,\n            balance: val.balance,\n            contactNo: val.contactNo,\n            accountType: val.accountType,\n            updateCallback: updateUser\n          }, val._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ModalComponent, {\n      show: isModal,\n      onHide: () => setIsModal(false),\n      accountno: accountNo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Table, \"4A8JGMPDzLtS3hid7aqgxk4TEZc=\");\n\n_c = Table;\nexport default Table;\n\nvar _c;\n\n$RefreshReg$(_c, \"Table\");","map":{"version":3,"sources":["/home/immortal/Documents/React-files/Banking/frontend/src/App/components/Table.js"],"names":["React","useEffect","useState","Axios","TableRow","ModalComponent","Table","state","setState","isModal","setIsModal","accountNo","setAccountNo","updateUser","get","then","response","data","catch","e","console","log","map","val","key","name","email","balance","contactNo","accountType","_id"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Axios from \"axios\";\n\nimport TableRow from \"./TableRow\";\nimport ModalComponent from \"./ModalComponent\";\n\nfunction Table() {\n  const [state, setState] = useState([]);\n  const [isModal, setIsModal] = useState(false);\n  const [accountNo, setAccountNo] = useState(\"\");\n\n  const updateUser = (accountNo) => {\n    setIsModal(true);\n    setAccountNo(accountNo);\n  };\n\n  useEffect(() => {\n    Axios.get(\"http://localhost:5000/allUsers\")\n      .then((response) => setState(response.data))\n      .catch((e) => {\n        console.log(\"Can't catch the response...\", e);\n      });\n  }, []);\n\n  return (\n    <div className=\"table-responsive\">\n      <table className=\"table table-striped table-hover\">\n        <thead className=\"thead-dark\">\n          <tr>\n            <th scope=\"col\" className=\"text-center\">\n              Sr.No\n            </th>\n            <th scope=\"col\" className=\"text-center\">\n              Account No\n            </th>\n            <th scope=\"col\" className=\"text-center\">\n              Name\n            </th>\n            <th scope=\"col\" className=\"text-center\">\n              Email Id\n            </th>\n            <th scope=\"col\" className=\"text-center\">\n              Balance\n            </th>\n            <th scope=\"col\" className=\"text-center\">\n              Contact No\n            </th>\n            <th scope=\"col\" className=\"text-center\">\n              Account Type\n            </th>\n            <th scope=\"col\" className=\"text-center\">\n              Actions\n            </th>\n          </tr>\n        </thead>\n        <tbody>\n          {state.map((val, key) => {\n            return (\n              <TableRow\n                key={val._id}\n                srNo={key + 1}\n                accountNo={val.accountNo}\n                name={val.name}\n                email={val.email}\n                balance={val.balance}\n                contactNo={val.contactNo}\n                accountType={val.accountType}\n                updateCallback={updateUser}\n              />\n            );\n          })}\n        </tbody>\n      </table>\n      <ModalComponent\n        show={isModal}\n        onHide={() => setIsModal(false)}\n        accountno={accountNo}\n      />\n    </div>\n  );\n}\n\nexport default Table;\n"]},"metadata":{},"sourceType":"module"}