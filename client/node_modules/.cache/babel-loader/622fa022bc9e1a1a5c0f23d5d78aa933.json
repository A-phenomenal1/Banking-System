{"ast":null,"code":"var _jsxFileName = \"/home/immortal/Documents/React-files/Banking/frontend/src/App/components/SendMoneyModal.js\",\n    _s = $RefreshSig$();\n\nimport Axios from \"axios\";\nimport React, { useState } from \"react\";\nimport { Modal, Button } from \"react-bootstrap\";\nimport colors from \"../../config/colors\";\nimport DoneComponent from \"./DoneComponent\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction SendMoneyModal(props) {\n  _s();\n\n  const [detail, setDetail] = useState({\n    accountNo: 0,\n    name: \"\",\n    email: \"\",\n    balance: 0,\n    amount: 0,\n    message: \"\"\n  });\n  const [btnTitle, setBtnTitle] = useState(\"Search User\");\n  const [error, setError] = useState({\n    isError: false,\n    error: \"\"\n  });\n  const [isModal, setIsModal] = useState(false); //const [status, setStatus] = useState(\"\");\n\n  const searchUser = () => {\n    Axios.get(\"http://localhost:5000/search/\" + detail.accountNo).then(response => {\n      if (response.data.accountNo !== props.accountno) {\n        setDetail(prevState => {\n          return { ...prevState,\n            name: response.data.name,\n            email: response.data.email,\n            balance: response.data.balance\n          };\n        });\n        setError(prevState => {\n          return { ...prevState,\n            isError: false\n          };\n        });\n        setBtnTitle(\"Send Money\");\n      } else {\n        setError({\n          isError: true,\n          error: \"You can't send money to yourself...\"\n        });\n      }\n    }).catch(e => setError({\n      isError: true,\n      error: \"Invalid Account No...\"\n    }));\n  };\n\n  const sendMoney = async () => {\n    try {\n      await Axios.patch(\"http://localhost:5000/update/\" + detail.accountNo, {\n        balance: Number(detail.balance) + Number(detail.amount)\n      });\n      await Axios.patch(\"http://localhost:5000/update/\" + props.accountno, {\n        balance: props.balance - detail.amount\n      });\n      props.onHide();\n      setTimeout(() => {\n        /*#__PURE__*/\n        _jsxDEV(DoneComponent, {\n          data: \"Success\",\n          show: isModal,\n          onHide: () => setIsModal(false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 9\n        }, this);\n      }, 2000);\n      window.location.reload(false);\n    } catch (error) {\n      setError({\n        isError: true,\n        error: \"Unable to send money, Try Again..\"\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Modal, { ...props,\n    \"aria-labelledby\": \"contained-modal-title-vcenter\",\n    centered: true,\n    children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n      closeButton: true,\n      children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n        id: \"contained-modal-title-vcenter\",\n        className: \"w-100 text-center title\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            fontSize: \"0.8em\",\n            color: colors.primary2\n          },\n          children: props.accountno\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), \"\\xA0\\xA0[\", /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            fontSize: \"0.8em\",\n            color: colors.secondary1\n          },\n          children: props.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), \"]\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"account-no\",\n          className: \"title2\",\n          style: {\n            width: \"35%\"\n          },\n          children: \"Account No :\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: detail.accountno,\n          placeholder: \"Receiver's Account no\",\n          className: \"input-field\",\n          style: {\n            width: \"60%\"\n          },\n          onChange: event => setDetail(prevState => {\n            return { ...prevState,\n              accountNo: event.target.value\n            };\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), error.isError === true ? /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            fontSize: \"0.9em\",\n            color: colors.primary2\n          },\n          children: error.error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }, this) : null, detail.name !== \"\" ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"name\",\n            className: \"title2\",\n            style: {\n              width: \"35%\"\n            },\n            children: \"Full Name :\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: detail.name,\n            placeholder: \"Account Holder Name\",\n            className: \"input-field\",\n            style: {\n              width: \"60%\"\n            },\n            onChange: event => setDetail(prevState => {\n              return { ...prevState,\n                name: event.target.value\n              };\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"name\",\n            className: \"title2\",\n            style: {\n              width: \"35%\"\n            },\n            children: \"Email Id :\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: detail.email,\n            placeholder: \"Account Holder Email Id\",\n            className: \"input-field\",\n            style: {\n              width: \"60%\"\n            },\n            onChange: event => setDetail(prevState => {\n              return { ...prevState,\n                email: event.target.value\n              };\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"name\",\n            className: \"title2\",\n            style: {\n              width: \"35%\"\n            },\n            children: \"Amount :\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: detail.amount,\n            placeholder: \"Amount to send\",\n            className: \"input-field\",\n            style: {\n              width: \"60%\"\n            },\n            onChange: event => setDetail(prevState => {\n              return { ...prevState,\n                amount: event.target.value\n              };\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"name\",\n            className: \"title2\",\n            style: {\n              width: \"35%\"\n            },\n            children: \"Message :\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: detail.message,\n            placeholder: \"Hi this is your birthday's gift.\",\n            className: \"input-field\",\n            style: {\n              width: \"60%\"\n            },\n            onChange: event => setDetail(prevState => {\n              return { ...prevState,\n                message: event.target.value\n              };\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 15\n          }, this), error.isError === true ? /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              fontSize: \"0.9em\",\n              color: colors.primary2\n            },\n            children: error.error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 17\n          }, this) : null]\n        }, void 0, true) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: props.onHide,\n        className: \"btn\",\n        style: {\n          backgroundColor: colors.primary2\n        },\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }, this), btnTitle === \"Search User\" ? /*#__PURE__*/_jsxDEV(Button, {\n        onClick: searchUser,\n        children: btnTitle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Button, {\n        onClick: sendMoney,\n        children: btnTitle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SendMoneyModal, \"JX/M8xLj0hQxNcA2sPaP+2e6WSA=\");\n\n_c = SendMoneyModal;\nexport default SendMoneyModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"SendMoneyModal\");","map":{"version":3,"sources":["/home/immortal/Documents/React-files/Banking/frontend/src/App/components/SendMoneyModal.js"],"names":["Axios","React","useState","Modal","Button","colors","DoneComponent","SendMoneyModal","props","detail","setDetail","accountNo","name","email","balance","amount","message","btnTitle","setBtnTitle","error","setError","isError","isModal","setIsModal","searchUser","get","then","response","data","accountno","prevState","catch","e","sendMoney","patch","Number","onHide","setTimeout","window","location","reload","fontSize","color","primary2","secondary1","width","event","target","value","backgroundColor"],"mappings":"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","sourcesContent":["import Axios from \"axios\";\nimport React, { useState } from \"react\";\nimport { Modal, Button } from \"react-bootstrap\";\n\nimport colors from \"../../config/colors\";\nimport DoneComponent from \"./DoneComponent\";\n\nfunction SendMoneyModal(props) {\n  const [detail, setDetail] = useState({\n    accountNo: 0,\n    name: \"\",\n    email: \"\",\n    balance: 0,\n    amount: 0,\n    message: \"\",\n  });\n  const [btnTitle, setBtnTitle] = useState(\"Search User\");\n  const [error, setError] = useState({ isError: false, error: \"\" });\n  const [isModal, setIsModal] = useState(false);\n  //const [status, setStatus] = useState(\"\");\n\n  const searchUser = () => {\n    Axios.get(\"http://localhost:5000/search/\" + detail.accountNo)\n      .then((response) => {\n        if (response.data.accountNo !== props.accountno) {\n          setDetail((prevState) => {\n            return {\n              ...prevState,\n              name: response.data.name,\n              email: response.data.email,\n              balance: response.data.balance,\n            };\n          });\n          setError((prevState) => {\n            return { ...prevState, isError: false };\n          });\n          setBtnTitle(\"Send Money\");\n        } else {\n          setError({\n            isError: true,\n            error: \"You can't send money to yourself...\",\n          });\n        }\n      })\n      .catch((e) =>\n        setError({ isError: true, error: \"Invalid Account No...\" })\n      );\n  };\n  const sendMoney = async () => {\n    try {\n      await Axios.patch(\"http://localhost:5000/update/\" + detail.accountNo, {\n        balance: Number(detail.balance) + Number(detail.amount),\n      });\n      await Axios.patch(\"http://localhost:5000/update/\" + props.accountno, {\n        balance: props.balance - detail.amount,\n      });\n      props.onHide();\n      setTimeout(() => {\n        <DoneComponent\n          data=\"Success\"\n          show={isModal}\n          onHide={() => setIsModal(false)}\n        />;\n      }, 2000);\n      window.location.reload(false);\n    } catch (error) {\n      setError({ isError: true, error: \"Unable to send money, Try Again..\" });\n    }\n  };\n\n  return (\n    <Modal {...props} aria-labelledby=\"contained-modal-title-vcenter\" centered>\n      <Modal.Header closeButton>\n        <Modal.Title\n          id=\"contained-modal-title-vcenter\"\n          className=\"w-100 text-center title\"\n        >\n          <span style={{ fontSize: \"0.8em\", color: colors.primary2 }}>\n            {props.accountno}\n          </span>\n          &nbsp;&nbsp;[\n          <span style={{ fontSize: \"0.8em\", color: colors.secondary1 }}>\n            {props.name}\n          </span>\n          ]\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <div>\n          <label\n            htmlFor=\"account-no\"\n            className=\"title2\"\n            style={{ width: \"35%\" }}\n          >\n            Account No :\n          </label>\n          <input\n            type=\"text\"\n            value={detail.accountno}\n            placeholder=\"Receiver's Account no\"\n            className=\"input-field\"\n            style={{ width: \"60%\" }}\n            onChange={(event) =>\n              setDetail((prevState) => {\n                return { ...prevState, accountNo: event.target.value };\n              })\n            }\n          />\n          {error.isError === true ? (\n            <span style={{ fontSize: \"0.9em\", color: colors.primary2 }}>\n              {error.error}\n            </span>\n          ) : null}\n          {detail.name !== \"\" ? (\n            <>\n              <label htmlFor=\"name\" className=\"title2\" style={{ width: \"35%\" }}>\n                Full Name :\n              </label>\n              <input\n                type=\"text\"\n                value={detail.name}\n                placeholder=\"Account Holder Name\"\n                className=\"input-field\"\n                style={{ width: \"60%\" }}\n                onChange={(event) =>\n                  setDetail((prevState) => {\n                    return { ...prevState, name: event.target.value };\n                  })\n                }\n              />\n              <label htmlFor=\"name\" className=\"title2\" style={{ width: \"35%\" }}>\n                Email Id :\n              </label>\n              <input\n                type=\"text\"\n                value={detail.email}\n                placeholder=\"Account Holder Email Id\"\n                className=\"input-field\"\n                style={{ width: \"60%\" }}\n                onChange={(event) =>\n                  setDetail((prevState) => {\n                    return { ...prevState, email: event.target.value };\n                  })\n                }\n              />\n              <label htmlFor=\"name\" className=\"title2\" style={{ width: \"35%\" }}>\n                Amount :\n              </label>\n              <input\n                type=\"text\"\n                value={detail.amount}\n                placeholder=\"Amount to send\"\n                className=\"input-field\"\n                style={{ width: \"60%\" }}\n                onChange={(event) =>\n                  setDetail((prevState) => {\n                    return { ...prevState, amount: event.target.value };\n                  })\n                }\n              />\n              <label htmlFor=\"name\" className=\"title2\" style={{ width: \"35%\" }}>\n                Message :\n              </label>\n              <input\n                type=\"text\"\n                value={detail.message}\n                placeholder=\"Hi this is your birthday's gift.\"\n                className=\"input-field\"\n                style={{ width: \"60%\" }}\n                onChange={(event) =>\n                  setDetail((prevState) => {\n                    return { ...prevState, message: event.target.value };\n                  })\n                }\n              />\n              {error.isError === true ? (\n                <span style={{ fontSize: \"0.9em\", color: colors.primary2 }}>\n                  {error.error}\n                </span>\n              ) : null}\n            </>\n          ) : null}\n        </div>\n      </Modal.Body>\n      <Modal.Footer>\n        <Button\n          onClick={props.onHide}\n          className=\"btn\"\n          style={{ backgroundColor: colors.primary2 }}\n        >\n          Cancel\n        </Button>\n        {btnTitle === \"Search User\" ? (\n          <Button onClick={searchUser}>{btnTitle}</Button>\n        ) : (\n          <Button onClick={sendMoney}>{btnTitle}</Button>\n        )}\n      </Modal.Footer>\n    </Modal>\n  );\n}\n\nexport default SendMoneyModal;\n"]},"metadata":{},"sourceType":"module"}