{"ast":null,"code":"var _jsxFileName = \"/home/immortal/Documents/React-files/Banking/frontend/src/App/components/UserTable.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport Axios from \"axios\";\nimport TableRow from \"./UserTableRow\";\nimport UpdateUserModal from \"./UpdateUserModal\";\nimport DeleteUserModal from \"./DeleteUserModal\";\nimport SendMoneyModal from \"./SendMoneyModal\";\nimport colors from \"../../config/colors\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction UserTable(props) {\n  _s();\n\n  const [state, setState] = useState([]);\n  const [isUpdateModal, setIsUpdateModal] = useState(false);\n  const [isDeleteModal, setIsDeleteModal] = useState(false);\n  const [isSendMoneyModal, setIsSendMoneyModal] = useState(false);\n  const [num, setNum] = useState(0);\n  const [getProps, setGetProps] = useState({\n    accountNo: 0,\n    name: \"\",\n    balance: 0\n  });\n\n  const updateUser = accountNo => {\n    setIsUpdateModal(true);\n    setGetProps(prevState => {\n      return { ...prevState,\n        accountNo\n      };\n    });\n  };\n\n  const deleteUser = accountNo => {\n    setIsDeleteModal(true);\n    setGetProps(prevState => {\n      return { ...prevState,\n        accountNo\n      };\n    });\n  };\n\n  const sendMoney = (accountNo, name, balance) => {\n    setIsSendMoneyModal(true);\n    setGetProps({\n      accountNo,\n      name,\n      balance\n    });\n  };\n\n  useEffect(() => {\n    Axios.get(\"http://localhost:5000/allUsers\").then(response => {\n      setState(response.data);\n      props.from === \"home2\" ? setNum(5) : setNum(response.data.length);\n    }).catch(e => {\n      console.log(\"Can't catch the response...\", e);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"table-responsive-xl\",\n    children: [/*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table\",\n      style: {\n        border: \"2px solid gray\",\n        borderRadius: \"10px\",\n        overflow: \"hidden\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        className: \"thead-dark\",\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              className: \"text-center\",\n              children: \"Sr.No\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              className: \"text-center\",\n              children: \"Account No\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              className: \"text-center\",\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              className: \"text-center\",\n              children: \"Email Id\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              className: \"text-center\",\n              children: \"Balance\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              className: \"text-center\",\n              children: \"Contact No\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              className: \"text-center\",\n              children: \"Account Type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            className: \"text-center\",\n            children: \"Actions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: [state.slice(0, num).map((val, key) => {\n          return /*#__PURE__*/_jsxDEV(TableRow, {\n            srNo: key + 1,\n            accountNo: val.accountNo,\n            name: val.name,\n            email: val.email,\n            balance: val.balance,\n            contactNo: val.contactNo,\n            accountType: val.accountType,\n            updateCallback: updateUser,\n            deleteCallback: deleteUser,\n            sendMoneyCallback: sendMoney\n          }, val._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 15\n          }, this);\n        }), state.length === 0 ? /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            scroll: \"row\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            style: {\n              color: colors.dark1,\n              fontSize: \"1.5em\"\n            },\n            children: \"...No Users...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 13\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), isUpdateModal ? /*#__PURE__*/_jsxDEV(UpdateUserModal, {\n      show: isUpdateModal,\n      onHide: () => setIsUpdateModal(false),\n      accountno: getProps.accountNo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 9\n    }, this) : null, isDeleteModal ? /*#__PURE__*/_jsxDEV(DeleteUserModal, {\n      show: isDeleteModal,\n      onHide: () => setIsDeleteModal(false),\n      accountno: getProps.accountNo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 9\n    }, this) : null, isSendMoneyModal ? /*#__PURE__*/_jsxDEV(SendMoneyModal, {\n      show: isSendMoneyModal,\n      onHide: () => setIsSendMoneyModal(false),\n      accountno: getProps.accountNo,\n      name: getProps.name,\n      balance: getProps.balance\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 9\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n\n_s(UserTable, \"MW78h78QyV5laSAnWQhRBUuGZdI=\");\n\n_c = UserTable;\nexport default UserTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserTable\");","map":{"version":3,"sources":["/home/immortal/Documents/React-files/Banking/frontend/src/App/components/UserTable.js"],"names":["React","useEffect","useState","Axios","TableRow","UpdateUserModal","DeleteUserModal","SendMoneyModal","colors","UserTable","props","state","setState","isUpdateModal","setIsUpdateModal","isDeleteModal","setIsDeleteModal","isSendMoneyModal","setIsSendMoneyModal","num","setNum","getProps","setGetProps","accountNo","name","balance","updateUser","prevState","deleteUser","sendMoney","get","then","response","data","from","length","catch","e","console","log","border","borderRadius","overflow","slice","map","val","key","email","contactNo","accountType","_id","color","dark1","fontSize"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Axios from \"axios\";\n\nimport TableRow from \"./UserTableRow\";\nimport UpdateUserModal from \"./UpdateUserModal\";\nimport DeleteUserModal from \"./DeleteUserModal\";\nimport SendMoneyModal from \"./SendMoneyModal\";\nimport colors from \"../../config/colors\";\n\nfunction UserTable(props) {\n  const [state, setState] = useState([]);\n  const [isUpdateModal, setIsUpdateModal] = useState(false);\n  const [isDeleteModal, setIsDeleteModal] = useState(false);\n  const [isSendMoneyModal, setIsSendMoneyModal] = useState(false);\n  const [num, setNum] = useState(0);\n  const [getProps, setGetProps] = useState({\n    accountNo: 0,\n    name: \"\",\n    balance: 0,\n  });\n\n  const updateUser = (accountNo) => {\n    setIsUpdateModal(true);\n    setGetProps((prevState) => {\n      return {\n        ...prevState,\n        accountNo,\n      };\n    });\n  };\n\n  const deleteUser = (accountNo) => {\n    setIsDeleteModal(true);\n    setGetProps((prevState) => {\n      return {\n        ...prevState,\n        accountNo,\n      };\n    });\n  };\n\n  const sendMoney = (accountNo, name, balance) => {\n    setIsSendMoneyModal(true);\n    setGetProps({\n      accountNo,\n      name,\n      balance,\n    });\n  };\n\n  useEffect(() => {\n    Axios.get(\"http://localhost:5000/allUsers\")\n      .then((response) => {\n        setState(response.data);\n        props.from === \"home2\" ? setNum(5) : setNum(response.data.length);\n      })\n      .catch((e) => {\n        console.log(\"Can't catch the response...\", e);\n      });\n  }, []);\n  return (\n    <div className=\"table-responsive-xl\">\n      <table\n        className=\"table\"\n        style={{\n          border: \"2px solid gray\",\n          borderRadius: \"10px\",\n          overflow: \"hidden\",\n        }}\n      >\n        <thead className=\"thead-dark\">\n          <tr>\n            <>\n              <th scope=\"col\" className=\"text-center\">\n                Sr.No\n              </th>\n              <th scope=\"col\" className=\"text-center\">\n                Account No\n              </th>\n              <th scope=\"col\" className=\"text-center\">\n                Name\n              </th>\n              <th scope=\"col\" className=\"text-center\">\n                Email Id\n              </th>\n              <th scope=\"col\" className=\"text-center\">\n                Balance\n              </th>\n              <th scope=\"col\" className=\"text-center\">\n                Contact No\n              </th>\n              <th scope=\"col\" className=\"text-center\">\n                Account Type\n              </th>\n            </>\n            <th scope=\"col\" className=\"text-center\">\n              Actions\n            </th>\n          </tr>\n        </thead>\n        <tbody>\n          {state.slice(0, num).map((val, key) => {\n            return (\n              <TableRow\n                key={val._id}\n                srNo={key + 1}\n                accountNo={val.accountNo}\n                name={val.name}\n                email={val.email}\n                balance={val.balance}\n                contactNo={val.contactNo}\n                accountType={val.accountType}\n                updateCallback={updateUser}\n                deleteCallback={deleteUser}\n                sendMoneyCallback={sendMoney}\n              />\n            );\n          })}\n          {state.length === 0 ? (\n            <tr>\n              <th scroll=\"row\"></th>\n              <td></td>\n              <td></td>\n              <td></td>\n              <td style={{ color: colors.dark1, fontSize: \"1.5em\" }}>\n                ...No Users...\n              </td>\n              <td></td>\n              <td></td>\n              <td></td>\n            </tr>\n          ) : null}\n        </tbody>\n      </table>\n      {isUpdateModal ? (\n        <UpdateUserModal\n          show={isUpdateModal}\n          onHide={() => setIsUpdateModal(false)}\n          accountno={getProps.accountNo}\n        />\n      ) : null}\n      {isDeleteModal ? (\n        <DeleteUserModal\n          show={isDeleteModal}\n          onHide={() => setIsDeleteModal(false)}\n          accountno={getProps.accountNo}\n        />\n      ) : null}\n      {isSendMoneyModal ? (\n        <SendMoneyModal\n          show={isSendMoneyModal}\n          onHide={() => setIsSendMoneyModal(false)}\n          accountno={getProps.accountNo}\n          name={getProps.name}\n          balance={getProps.balance}\n        />\n      ) : null}\n    </div>\n  );\n}\n\nexport default UserTable;\n"]},"metadata":{},"sourceType":"module"}