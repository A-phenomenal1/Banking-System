[{"/home/immortal/Documents/React-files/Banking/frontend/src/index.js":"1","/home/immortal/Documents/React-files/Banking/frontend/src/App.js":"2","/home/immortal/Documents/React-files/Banking/frontend/src/config/colors.js":"3","/home/immortal/Documents/React-files/Banking/frontend/src/App/Home.js":"4","/home/immortal/Documents/React-files/Banking/frontend/src/App/CustomerHome.js":"5","/home/immortal/Documents/React-files/Banking/frontend/src/App/components/Navbar.js":"6","/home/immortal/Documents/React-files/Banking/frontend/src/App/components/UpdateUserModal.js":"7","/home/immortal/Documents/React-files/Banking/frontend/src/App/components/CreateUserModal.js":"8","/home/immortal/Documents/React-files/Banking/frontend/src/App/components/DeleteUserModal.js":"9","/home/immortal/Documents/React-files/Banking/frontend/src/App/components/SendMoneyModal.js":"10","/home/immortal/Documents/React-files/Banking/frontend/src/App/components/DoneComponent.js":"11","/home/immortal/Documents/React-files/Banking/frontend/src/App/components/UserTable.js":"12","/home/immortal/Documents/React-files/Banking/frontend/src/App/components/UserTableRow.js":"13","/home/immortal/Documents/React-files/Banking/frontend/src/App/components/TransacTable.js":"14","/home/immortal/Documents/React-files/Banking/frontend/src/App/components/TransacTableRow.js":"15","/home/immortal/Documents/React-files/Banking/frontend/src/App/components/InvoiceGen.js":"16","/home/immortal/Documents/React-files/Banking/frontend/src/App/TransactionHome.js":"17","/home/immortal/Documents/React-files/Banking/frontend/src/App/Home2.js":"18"},{"size":196,"mtime":1612944080106,"results":"19","hashOfConfig":"20"},{"size":620,"mtime":1613645653052,"results":"21","hashOfConfig":"20"},{"size":280,"mtime":1612865422028,"results":"22","hashOfConfig":"20"},{"size":6025,"mtime":1613645645076,"results":"23","hashOfConfig":"20"},{"size":1198,"mtime":1613479807109,"results":"24","hashOfConfig":"20"},{"size":2176,"mtime":1613326289685,"results":"25","hashOfConfig":"20"},{"size":4955,"mtime":1613072072142,"results":"26","hashOfConfig":"20"},{"size":5690,"mtime":1613062513002,"results":"27","hashOfConfig":"20"},{"size":1881,"mtime":1613070998414,"results":"28","hashOfConfig":"20"},{"size":8956,"mtime":1613373594812,"results":"29","hashOfConfig":"20"},{"size":956,"mtime":1613129072390,"results":"30","hashOfConfig":"20"},{"size":4396,"mtime":1613479346693,"results":"31","hashOfConfig":"20"},{"size":2078,"mtime":1613135028886,"results":"32","hashOfConfig":"20"},{"size":2596,"mtime":1613479395329,"results":"33","hashOfConfig":"20"},{"size":1368,"mtime":1613155622672,"results":"34","hashOfConfig":"20"},{"size":4728,"mtime":1613396771772,"results":"35","hashOfConfig":"20"},{"size":587,"mtime":1613157439072,"results":"36","hashOfConfig":"20"},{"size":998,"mtime":1613817347760,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"1ty3mhk",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"40"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"40"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"40"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"40"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"40"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"/home/immortal/Documents/React-files/Banking/frontend/src/index.js",[],["80","81"],"/home/immortal/Documents/React-files/Banking/frontend/src/App.js",[],"/home/immortal/Documents/React-files/Banking/frontend/src/config/colors.js",["82"],"export default {\n  primary1: \"#30475e\",\n  primary2: \"#f05454\",\n  primary3: \"#8D1723\",\n  secondary1: \"#18222F\",\n  secondary2: \"#9f5f80\",\n  tertiary1: \"#fd3a69\",\n  light1: \"#f1f6f9\",\n  light2: \"#f6f5f5\",\n  light3: \"#c3d9e9\",\n  dark1: \"#2c061f\",\n  white: \"#fff\",\n  black: \"#000\",\n};\n","/home/immortal/Documents/React-files/Banking/frontend/src/App/Home.js",[],"/home/immortal/Documents/React-files/Banking/frontend/src/App/CustomerHome.js",[],"/home/immortal/Documents/React-files/Banking/frontend/src/App/components/Navbar.js",[],"/home/immortal/Documents/React-files/Banking/frontend/src/App/components/UpdateUserModal.js",[],"/home/immortal/Documents/React-files/Banking/frontend/src/App/components/CreateUserModal.js",[],"/home/immortal/Documents/React-files/Banking/frontend/src/App/components/DeleteUserModal.js",[],"/home/immortal/Documents/React-files/Banking/frontend/src/App/components/SendMoneyModal.js",[],"/home/immortal/Documents/React-files/Banking/frontend/src/App/components/DoneComponent.js",["83"],"import React from \"react\";\nimport { Modal } from \"react-bootstrap\";\nimport colors from \"../../config/colors\";\n\nfunction DoneComponent(props) {\n  return (\n    <Modal\n      {...props}\n      dialogClassName=\"modal-w\"\n      style={{\n        border: \"none\",\n        // backgroundColor: colors.light2,\n      }}\n      centered\n    >\n      <img\n        src={props.data.img}\n        attr=\"status\"\n        style={{\n          width: \"120px\",\n          height: \"120px\",\n          backgroundColor: colors.secondary2,\n          border: \"none\",\n          outline: \"none\",\n        }}\n      />\n      {props.error.isError === true ? (\n        <span\n          style={{\n            fontSize: \"1em\",\n            color: colors.dark1,\n            fontWeight: \"500\",\n            textAlign: \"center\",\n            backgroundColor: colors.light3,\n          }}\n        >\n          {props.error.error}\n        </span>\n      ) : null}\n    </Modal>\n  );\n}\n\nexport default DoneComponent;\n","/home/immortal/Documents/React-files/Banking/frontend/src/App/components/UserTable.js",["84"],"import React, { useEffect, useState } from \"react\";\nimport Axios from \"axios\";\n\nimport TableRow from \"./UserTableRow\";\nimport UpdateUserModal from \"./UpdateUserModal\";\nimport DeleteUserModal from \"./DeleteUserModal\";\nimport SendMoneyModal from \"./SendMoneyModal\";\nimport colors from \"../../config/colors\";\n\nfunction UserTable(props) {\n  const [state, setState] = useState([]);\n  const [isUpdateModal, setIsUpdateModal] = useState(false);\n  const [isDeleteModal, setIsDeleteModal] = useState(false);\n  const [isSendMoneyModal, setIsSendMoneyModal] = useState(false);\n  const [num, setNum] = useState(0);\n  const [getProps, setGetProps] = useState({\n    accountNo: 0,\n    name: \"\",\n    balance: 0,\n  });\n\n  const updateUser = (accountNo) => {\n    setIsUpdateModal(true);\n    setGetProps((prevState) => {\n      return {\n        ...prevState,\n        accountNo,\n      };\n    });\n  };\n\n  const deleteUser = (accountNo) => {\n    setIsDeleteModal(true);\n    setGetProps((prevState) => {\n      return {\n        ...prevState,\n        accountNo,\n      };\n    });\n  };\n\n  const sendMoney = (accountNo, name, balance) => {\n    setIsSendMoneyModal(true);\n    setGetProps({\n      accountNo,\n      name,\n      balance,\n    });\n  };\n\n  useEffect(() => {\n    Axios.get(\"http://localhost:5000/allUsers\")\n      .then((response) => {\n        setState(response.data);\n        props.from === \"home2\" ? setNum(5) : setNum(response.data.length);\n      })\n      .catch((e) => {\n        console.log(\"Can't catch the response...\", e);\n      });\n  }, []);\n  return (\n    <div className=\"table-responsive-xl\">\n      <table\n        className=\"table\"\n        style={{\n          borderRadius: \"20px\",\n          overflow: \"hidden\",\n          boxShadow: \"8px 8px 10px gray\",\n        }}\n      >\n        <thead className=\"thead-dark\">\n          <tr>\n            <>\n              <th scope=\"col\" className=\"text-center\">\n                Sr.No\n              </th>\n              <th scope=\"col\" className=\"text-center\">\n                Account No\n              </th>\n              <th scope=\"col\" className=\"text-center\">\n                Name\n              </th>\n              <th scope=\"col\" className=\"text-center\">\n                Email Id\n              </th>\n              <th scope=\"col\" className=\"text-center\">\n                Balance\n              </th>\n              <th scope=\"col\" className=\"text-center\">\n                Contact No\n              </th>\n              <th scope=\"col\" className=\"text-center\">\n                Account Type\n              </th>\n            </>\n            <th scope=\"col\" className=\"text-center\">\n              Actions\n            </th>\n          </tr>\n        </thead>\n        <tbody>\n          {state.slice(0, num).map((val, key) => {\n            return (\n              <TableRow\n                key={val._id}\n                srNo={key + 1}\n                accountNo={val.accountNo}\n                name={val.name}\n                email={val.email}\n                balance={val.balance}\n                contactNo={val.contactNo}\n                accountType={val.accountType}\n                updateCallback={updateUser}\n                deleteCallback={deleteUser}\n                sendMoneyCallback={sendMoney}\n              />\n            );\n          })}\n          {state.length === 0 ? (\n            <tr>\n              <th scroll=\"row\"></th>\n              <td></td>\n              <td></td>\n              <td></td>\n              <td style={{ color: colors.dark1, fontSize: \"1.5em\" }}>\n                ...No Users...\n              </td>\n              <td></td>\n              <td></td>\n              <td></td>\n            </tr>\n          ) : null}\n        </tbody>\n      </table>\n      {isUpdateModal ? (\n        <UpdateUserModal\n          show={isUpdateModal}\n          onHide={() => setIsUpdateModal(false)}\n          accountno={getProps.accountNo}\n        />\n      ) : null}\n      {isDeleteModal ? (\n        <DeleteUserModal\n          show={isDeleteModal}\n          onHide={() => setIsDeleteModal(false)}\n          accountno={getProps.accountNo}\n        />\n      ) : null}\n      {isSendMoneyModal ? (\n        <SendMoneyModal\n          show={isSendMoneyModal}\n          onHide={() => setIsSendMoneyModal(false)}\n          accountno={getProps.accountNo}\n          name={getProps.name}\n          balance={getProps.balance}\n        />\n      ) : null}\n    </div>\n  );\n}\n\nexport default UserTable;\n","/home/immortal/Documents/React-files/Banking/frontend/src/App/components/UserTableRow.js",[],"/home/immortal/Documents/React-files/Banking/frontend/src/App/components/TransacTable.js",[],"/home/immortal/Documents/React-files/Banking/frontend/src/App/components/TransacTableRow.js",["85","86"],"import React, { useState } from \"react\";\nimport colors from \"../../config/colors\";\n\nimport \"./Home.css\";\nimport \"../../App.css\";\n\nfunction TransacTableRow(props) {\n  const {\n    srNo,\n    id,\n    senderAccountNo,\n    receiverAccountNo,\n    transferAmt,\n    createdAt,\n    invoiceCallback,\n    deleteCallback,\n  } = props;\n  const time = {\n    date: props.createdAt.substr(0, 10),\n    clockTime: props.createdAt.substr(11, 8),\n  };\n  return (\n    <>\n      <tr>\n        <th scope=\"row\" className=\"text-center\">\n          {srNo}\n        </th>\n        <td className=\"text-center\">{senderAccountNo}</td>\n        <td className=\"text-center\">{receiverAccountNo}</td>\n        <td className=\"text-center\">$ {transferAmt}</td>\n        <td className=\"text-center\">\n          {time.date} & {time.clockTime}\n        </td>\n        <td className=\"text-center\">\n          <div\n            className=\"btn text-light\"\n            style={{ backgroundColor: colors.secondary2, marginRight: \"5px\" }}\n            onClick={() => invoiceCallback(id)}\n          >\n            Invoice\n          </div>\n          <div\n            className=\"btn text-light\"\n            style={{ backgroundColor: colors.primary2 }}\n            onClick={() => deleteCallback(id)}\n          >\n            &nbsp;Delete&nbsp;\n          </div>\n        </td>\n      </tr>\n    </>\n  );\n}\n\nexport default TransacTableRow;\n","/home/immortal/Documents/React-files/Banking/frontend/src/App/components/InvoiceGen.js",["87"],"import React, { useEffect, useState } from \"react\";\nimport { Button, Modal } from \"react-bootstrap\";\nimport axios from \"axios\";\nimport html2canvas from \"html2canvas\";\nimport { jsPDF } from \"jspdf\";\n\nimport colors from \"../../config/colors\";\n\nfunction InvoiceGen(props) {\n  const [detail, setDetail] = useState({});\n  const [error, setError] = useState({ isError: false, error: \"\" });\n  const [time, setTime] = useState({ date: \"\", clockTime: \"\" });\n\n  useEffect(() => {\n    axios\n      .get(\"http://localhost:5000/searchTransac/\" + props.id)\n      .then((response) => {\n        setDetail(response.data);\n        setError({ isError: false, error: \"\" });\n        setTime({\n          date: response.data.createdAt.substr(0, 10),\n          clockTime: response.data.createdAt.substr(11, 8),\n        });\n      })\n      .catch((e) => setError({ isError: true, error: \"Network Error.\" }));\n  }, []);\n\n  const printDocument = () => {\n    const input = document.getElementById(\"divToPrint\");\n    html2canvas(input)\n      .then((canvas) => {\n        let imgWidth = 208;\n        let imgHeight = (canvas.height * imgWidth) / canvas.width;\n        const imgData = canvas.toDataURL(\"img/png\");\n        const pdf = new jsPDF(\"p\", \"mm\", \"a4\");\n        pdf.addImage(imgData, \"PNG\", 0, 0, imgWidth, imgHeight);\n        pdf.save(\"invoice\" + detail.senderAccountNo + \".pdf\");\n      })\n      .catch((e) => {\n        alert(\"Download Unsuccessful\");\n      });\n  };\n\n  return (\n    <Modal\n      {...props}\n      size=\"md\"\n      aria-labelledby=\"contained-modal-title-vcenter\"\n      centered\n    >\n      <div style={{ backgroundColor: colors.light3 }} id=\"divToPrint\">\n        <Modal.Header closeButton>\n          <Modal.Title\n            id=\"contained-modal-title-vcenter\"\n            className=\"w-100 text-center title\"\n          >\n            Invoice\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <>\n            <div\n              style={{ width: \"100%\", textAlign: \"center \" }}\n              className=\"title2\"\n            >\n              <label style={{ width: \"45%\" }}>Sender Account No :</label>\n              <label style={{ width: \"45%\" }}>{detail.senderAccountNo}</label>\n            </div>\n            <div\n              style={{ width: \"100%\", textAlign: \"center \" }}\n              className=\"title2\"\n            >\n              <label style={{ width: \"45%\" }}>Sender Name :</label>\n              <label style={{ width: \"45%\" }}>{detail.sender}</label>\n            </div>\n            <div\n              style={{ width: \"100%\", textAlign: \"center \" }}\n              className=\"title2\"\n            >\n              <label style={{ width: \"45%\" }}>Receiver Account No :</label>\n              <label style={{ width: \"45%\" }}>{detail.receiverAccountNo}</label>\n            </div>\n            <div\n              style={{ width: \"100%\", textAlign: \"center \" }}\n              className=\"title2\"\n            >\n              <label style={{ width: \"45%\" }}>Sender Contact No :</label>\n              <label style={{ width: \"45%\" }}>{detail.senderContactNo}</label>\n            </div>\n            <div\n              style={{ width: \"100%\", textAlign: \"center \" }}\n              className=\"title2\"\n            >\n              <label style={{ width: \"45%\" }}>Transaction Amount :</label>\n              <label style={{ width: \"45%\" }}>$ {detail.transferAmt}</label>\n            </div>\n            <div\n              style={{ width: \"100%\", textAlign: \"center \" }}\n              className=\"title2\"\n            >\n              <label style={{ width: \"45%\" }}>Date & Time :</label>\n              <label style={{ width: \"45%\" }}>\n                {time.date} &{time.clockTime}\n              </label>\n            </div>\n            <div\n              style={{ width: \"100%\", textAlign: \"center \" }}\n              className=\"title2\"\n            >\n              <label style={{ width: \"35%\" }}>Message :</label>\n              <label\n                style={{ width: \"55%\", fontWeight: 500, fontSize: \"0.9em\" }}\n              >\n                {detail.message}\n              </label>\n            </div>\n            {error.isError ? (\n              <div\n                style={{ width: \"100%\", textAlign: \"center \" }}\n                className=\"title2\"\n              >\n                {error.error}\n              </div>\n            ) : null}\n          </>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button\n            onClick={props.onHide}\n            className=\"btn\"\n            style={{ backgroundColor: colors.primary2 }}\n          >\n            Cancel\n          </Button>\n          <Button onClick={printDocument}>Download</Button>\n        </Modal.Footer>\n      </div>\n    </Modal>\n  );\n}\n\nexport default InvoiceGen;\n","/home/immortal/Documents/React-files/Banking/frontend/src/App/TransactionHome.js",[],"/home/immortal/Documents/React-files/Banking/frontend/src/App/Home2.js",[],{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","replacedBy":"91"},{"ruleId":"92","severity":1,"message":"93","line":1,"column":1,"nodeType":"94","endLine":14,"endColumn":3},{"ruleId":"95","severity":1,"message":"96","line":16,"column":7,"nodeType":"97","endLine":26,"endColumn":9},{"ruleId":"98","severity":1,"message":"99","line":60,"column":6,"nodeType":"100","endLine":60,"endColumn":8,"suggestions":"101"},{"ruleId":"102","severity":1,"message":"103","line":1,"column":17,"nodeType":"104","messageId":"105","endLine":1,"endColumn":25},{"ruleId":"102","severity":1,"message":"106","line":14,"column":5,"nodeType":"104","messageId":"105","endLine":14,"endColumn":14},{"ruleId":"98","severity":1,"message":"107","line":26,"column":6,"nodeType":"100","endLine":26,"endColumn":8,"suggestions":"108"},"no-native-reassign",["109"],"no-negated-in-lhs",["110"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.from'. Either include it or remove the dependency array.","ArrayExpression",["111"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'createdAt' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props.id'. Either include it or remove the dependency array.",["112"],"no-global-assign","no-unsafe-negation",{"desc":"113","fix":"114"},{"desc":"115","fix":"116"},"Update the dependencies array to be: [props.from]",{"range":"117","text":"118"},"Update the dependencies array to be: [props.id]",{"range":"119","text":"120"},[1523,1525],"[props.from]",[887,889],"[props.id]"]